-- 1. Users Table
CREATE TABLE Users (
    UserId INT PRIMARY KEY IDENTITY(1,1),
    FirstName NVARCHAR(50) NOT NULL,
    MiddleName NVARCHAR(50),
    LastName NVARCHAR(50) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    PasswordHash NVARCHAR(255) NOT NULL,
    Phone NVARCHAR(20) NOT NULL,
    CreatedAt DATETIME2 DEFAULT SYSDATETIME()
);

-- 2. Roles Table
CREATE TABLE Roles (
    RoleId INT PRIMARY KEY IDENTITY(1,1),
    RoleName NVARCHAR(50) NOT NULL UNIQUE
);

-- Seed Roles here
INSERT INTO Roles (RoleName) VALUES ('admin'), ('employee'), ('user');

-- 3. UserRoles Table 
CREATE TABLE UserRoles (
    UserRoleId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    RoleId INT NOT NULL,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (RoleId) REFERENCES Roles(RoleId) ON DELETE CASCADE,
    UNIQUE(UserId, RoleId)
);

-- 4. Branches Table 
CREATE TABLE Branches (
    BranchId INT PRIMARY KEY IDENTITY(1,1),
    BranchName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100),
    Phone NVARCHAR(20),
    Status NVARCHAR(20) DEFAULT 'Active'
);

-- 5. Employees Table
CREATE TABLE Employees (
    EmployeeId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    HireDate DATETIME2,
    Salary DECIMAL(10,2),
    BranchId INT NOT NULL,
    Status NVARCHAR(20) DEFAULT 'Active',
    FOREIGN KEY (UserId) REFERENCES Users(UserId),
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId)
);

-- 6. ServiceTypes Table
CREATE TABLE ServiceTypes (
    ServiceTypeId INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(50) NOT NULL UNIQUE,
    Description NVARCHAR(255)
);



-- Orders table 
CREATE TABLE Orders (
    OrderId INT PRIMARY KEY IDENTITY(1,1),
    TrackingNo NVARCHAR(50) UNIQUE,
    OrderDate DATETIME2 DEFAULT SYSDATETIME(),
    DeliveryDate DATETIME2,
    DeclaredValue DECIMAL(10,2),
    ServiceTypeId INT NOT NULL,
    Status NVARCHAR(20) DEFAULT 'Pending',
    DeliveryAddress NVARCHAR(100) NOT NULL,
    UserId INT NOT NULL,
    FOREIGN KEY (ServiceTypeId) REFERENCES ServiceTypes(ServiceTypeId),
    FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- Payments table 
CREATE TABLE Payments (
    PaymentId INT PRIMARY KEY IDENTITY(1,1),
    Amount DECIMAL(10,2) NOT NULL,
    PaymentDate DATETIME2 DEFAULT SYSDATETIME(),
    Method NVARCHAR(50) NOT NULL,
    OrderId INT UNIQUE NOT NULL,
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId) ON DELETE CASCADE
);
-- 9. Parcels Table
CREATE TABLE Parcels (
    ParcelId INT PRIMARY KEY IDENTITY(1,1),
    OrderId INT NOT NULL,
    Height DECIMAL(10,2),
    Weight DECIMAL(10,2),
    Length DECIMAL(10,2),
    Width DECIMAL(10,2),
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId) ON DELETE CASCADE
);

-- 10. TrackingDetails Table 
CREATE TABLE TrackingDetails (
    TrackingDetailId INT PRIMARY KEY IDENTITY(1,1),
    TrackingNo NVARCHAR(50) NOT NULL,
    EventDate DATETIME2 NOT NULL,
    Office NVARCHAR(100),
    Event NVARCHAR(100),
    FOREIGN KEY (TrackingNo) REFERENCES Orders(TrackingNo)
);

-- 11. GeoLocationEvents Table 
CREATE TABLE GeoLocationEvents (
    EventId INT PRIMARY KEY IDENTITY(1,1),
    ParcelId INT NOT NULL,
    Latitude FLOAT NOT NULL,
    Longitude FLOAT NOT NULL,
    EventTimestamp DATETIME2 DEFAULT SYSDATETIME(),
    FOREIGN KEY (ParcelId) REFERENCES Parcels(ParcelId)
);

-- 12. Addresses Table 
CREATE TABLE Addresses (
    AddressId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    AddressLine1 NVARCHAR(100) NOT NULL,
    AddressLine2 NVARCHAR(100),
    City NVARCHAR(50),
    State NVARCHAR(50),
    Country NVARCHAR(50),
    PostalCode NVARCHAR(20),
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE
);

-- 13. Feedback Table
CREATE TABLE Feedback (
    FeedbackId INT PRIMARY KEY IDENTITY(1,1),
    FeedbackDate DATETIME2 DEFAULT SYSDATETIME(),
    Status NVARCHAR(20),
    Description NVARCHAR(MAX),
    Remark NVARCHAR(MAX),
    OrderId INT NOT NULL,
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId)
);

-- 14. Notifications Table
CREATE TABLE Notifications (
    NotificationId INT PRIMARY KEY IDENTITY(1,1),
    NotificationDate DATETIME2 DEFAULT SYSDATETIME(),
    Description NVARCHAR(MAX),
    OrderId INT,
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId)
);

-- 15. Rewards Table
CREATE TABLE Rewards (
    RewardId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    Points INT DEFAULT 0,
    LastUpdated DATETIME2 DEFAULT SYSDATETIME(),
    FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 16. RewardTransactions Table
CREATE TABLE RewardTransactions (
    TransactionId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    PointsChanged INT NOT NULL,
    Reason NVARCHAR(255),
    TransactionDate DATETIME2 DEFAULT SYSDATETIME(),
    FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 17. RateCards Table 
CREATE TABLE RateCards (
    RateCardId INT PRIMARY KEY IDENTITY(1,1),
    ServiceTypeId INT NOT NULL,
    MinWeight DECIMAL(10,2) NOT NULL,
    MaxWeight DECIMAL(10,2) NOT NULL,
    Price DECIMAL(10,2) NOT NULL,
    Zone NVARCHAR(50),
    StartDate DATETIME2,
    EndDate DATETIME2,
    FOREIGN KEY (ServiceTypeId) REFERENCES ServiceTypes(ServiceTypeId)
);
